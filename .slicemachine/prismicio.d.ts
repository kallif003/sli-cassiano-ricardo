// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types"
import type * as prismic from "@prismicio/client"

type Simplify<T> = {
	[KeyType in keyof T]: T[KeyType]
}
/** Content for repertorio-musical documents */
interface RepertoireDocumentData {
	/**
	 * video field in *repertorio-musical*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: repertoire.video
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
	 *
	 */
	video: prismicT.LinkField
	/**
	 * letraMusica field in *repertorio-musical*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: repertoire.letramusica
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
	 *
	 */
	letramusica: prismicT.LinkField
	/**
	 * titulo field in *repertorio-musical*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: repertoire.titulo
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
	 *
	 */
	titulo: prismicT.KeyTextField
}
/**
 * repertorio-musical document from Prismic
 *
 * - **API ID**: `repertoire`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type RepertoireDocument<Lang extends string = string> =
	prismicT.PrismicDocumentWithUID<
		Simplify<RepertoireDocumentData>,
		"repertoire",
		Lang
	>
export type AllDocumentTypes = RepertoireDocument
declare module "@prismicio/client" {
	interface CreateClient {
		(
			repositoryNameOrEndpoint: string,
			options?: prismic.ClientConfig
		): prismic.Client<AllDocumentTypes>
	}
	namespace Content {
		export type {
			RepertoireDocumentData,
			RepertoireDocument,
			AllDocumentTypes,
		}
	}
}
